setwd("C:/Users/Ellie Maclennan/OneDrive - Toronto Metropolitan University/Certificate - CIND820/Data)
setwd("C:/Users/Ellie Maclennan/OneDrive - Toronto Metropolitan University/Certificate - CIND820/Data")
?setwd
setwd(C:/Users/Ellie Maclennan/OneDrive - Toronto Metropolitan University/Certificate - CIND820/Data)
setwd("C:/Users/Ellie Maclennan/OneDrive - Toronto Metropolitan University/Certificate - CIND820/Data")
setwd("C:/Users/Ellie Maclennan/OneDrive - Toronto Metropolitan University/Certificate - CIND820/Data")
fileName <- "Revised_2016_DA/Revised_2016_DA.csv"
#importing data set
rawData <- read.csv(fileName,sep=",",
stringsAsFactors=FALSE,na.strings = c("",NA))
fileName <- "C:/Users/Ellie Maclennan/OneDrive - Toronto Metropolitan University/Certificate - CIND820/DataRevised_2016_DA/Revised_2016_DA.csv"
#importing data set
rawData <- read.csv(fileName,sep=",",
stringsAsFactors=FALSE,na.strings = c("",NA))
fileName <- "C:/Users/Ellie Maclennan/OneDrive - Toronto Metropolitan University/Certificate - CIND820/DataRevised_2016_DA/Revised_2016_DA.csv"
#importing data set
rawData <- read.csv(fileName,sep=",",
stringsAsFactors=FALSE,na.strings = c("",NA))
fileName <- "C:/Users/Ellie Maclennan/OneDrive - Toronto Metropolitan University/Certificate - CIND820/DataRevised_2016_DA/Revised_2016_DA.csv"
#importing data set
rawData <- read.csv(fileName,sep=",",
stringsAsFactors=FALSE,na.strings = c("",NA))
fileName <- "C:/Users/Ellie Maclennan/OneDrive - Toronto Metropolitan University\Certificate / CIND820/Data/Revised_2016_DA/Revised_2016_DA.csv"
fileName <- "C:/Users/Ellie Maclennan/OneDrive - Toronto Metropolitan University/Certificate - CIND820/Data/Revised_2016_DA/Revised_2016_DA.csv"
#importing data set
rawData <- read.csv(fileName,sep=",",
stringsAsFactors=FALSE,na.strings = c("",NA))
View(rawData)
#renaming geographic info and identifiers
names(rawData)[1:6]<- c("geoUID","provCode","provName","cdCode","cdName","daName")
#renaming mobility variables
names(rawData)[7:24]<- c("nonMovers_1yr"
,"movers_1yr"
,"movers_nonMigrants_1yr"
,"movers_migrants_1yr"
,"movers_migrants_external_1yr"
,"movers_migrants_internal_1yr"
,"movers_migrants_internal_intra_1yr"
,"movers_migrants_internal_inter_1yr"
,"mobility_total_1yr"
,"nonMovers_5yr"
,"movers_5yr"
,"movers_nonMigrants_5yr"
,"movers_migrants_5yr"
,"movers_migrants_external_5yr"
,"movers_migrants_internal_5yr"
,"movers_migrants_internal_intra_5yr"
,"movers_migrants_internal_inter_5yr"
,"mobility_total_5yr")
head(rawData) #check it worked
#subsetting mobility variables (my DVs)
rawMobility <- rawData[,c(1,7:24)]
#creating subset for geographic info <- can use to join with col0 for visualization later
geoInfoSubset <-  rawData[, c(1:6)]
#descriptives
summary(rawMobility)
rateVar <- function(rawCount, rawTotal){
ratedVar <- (rawCount / rawTotal) }
#attaching rawMoblity df for code simplicity
attach(rawMobility)
#top level
r_nonMovers_1yr <- rateVar(nonMovers_1yr, mobility_total_1yr)
r_movers_1yr <- rateVar(movers_1yr, mobility_total_1yr)
#secondary
r_nonMigrants_1yr <- rateVar(movers_nonMigrants_1yr, movers_1yr)
r_migrants_1yr <- rateVar(movers_migrants_1yr, movers_1yr)
#tertiary
r_external_1yr <- rateVar(movers_migrants_external_1yr, movers_migrants_1yr)
r_internal_1yr <- rateVar(movers_migrants_internal_1yr, movers_migrants_1yr)
#quaternary
r_intra_1yr <- rateVar(movers_migrants_internal_intra_1yr, movers_migrants_internal_1yr)
r_inter_1yr <- rateVar(movers_migrants_internal_inter_1yr, movers_migrants_internal_1yr)
# 5 year mobility variables
#top level
r_nonMovers_5yr <- rateVar(nonMovers_5yr, mobility_total_5yr)
r_movers_5yr <- rateVar(movers_5yr, mobility_total_5yr)
#secondary
r_nonMigrants_5yr <- rateVar(movers_nonMigrants_5yr, movers_1yr)
r_migrants_5yr <- rateVar(movers_migrants_5yr, movers_5yr)
#tertiary
r_external_5yr <- rateVar(movers_migrants_external_5yr, movers_migrants_5yr)
r_internal_5yr <- rateVar(movers_migrants_internal_5yr, movers_migrants_5yr)
#quaternary
r_intra_5yr <- rateVar(movers_migrants_internal_intra_5yr, movers_migrants_internal_5yr)
r_inter_5yr <- rateVar(movers_migrants_internal_inter_5yr, movers_migrants_internal_5yr)
#putting cleaned variables into dataframe
cleaned_mobility_r <- cbind(r_external_1yr, r_inter_1yr, r_internal_1yr, r_intra_1yr, r_migrants_1yr, r_movers_1yr, r_nonMigrants_1yr, r_nonMovers_1yr)
library(tidyr)
stringNames <- c()
for (var in tidyselect::vars_select(ls(), ends_with('1yr') & starts_with('r'))){
stringNames <- append(stringNames, var)
# append(stringNames, var)
# c_mobility_1yr <- rbind(rawMobility[stringName])
}
c_mobility_1yr <- cbind(geoUID, r_external_1yr, r_inter_1yr, r_internal_1yr, r_intra_1yr, r_migrants_1yr, r_movers_1yr, r_nonMigrants_1yr,r_nonMovers_1yr)
#5 year cleaned df
c_mobility_5yr <- cbind(geoUID, r_external_5yr, r_inter_5yr, r_internal_5yr, r_intra_5yr, r_migrants_5yr, r_movers_5yr, r_nonMigrants_5yr,r_nonMovers_5yr)
View(cleaned_mobility_r)
#now rate subMobility variables - use these for clustering
#function to rate variables and create difference variables
rateVar <- function(rawCount, rawTotal){
ratedVar <- (rawCount / rawTotal) } * 100
#now rating variables by level - hierarchy:
# 1 year moblility
# nonmovers, movers - top level
#         migrants, nonmigrants - secondary level
#     internal, external - tertiary level
# intraprov, interprov - quaternary level
# 5 year mobility
# nonmovers, movers - top level
#         migrants, nonmigrants - secondary level
#     internal, external - tertiary level
# intraprov, interprov - quaternary level
#attaching rawMoblity df for code simplicity
attach(rawMobility)
# 1 year mobility variables
#top level
r_nonMovers_1yr <- rateVar(nonMovers_1yr, mobility_total_1yr)
r_movers_1yr <- rateVar(movers_1yr, mobility_total_1yr)
#secondary
r_nonMigrants_1yr <- rateVar(movers_nonMigrants_1yr, movers_1yr)
r_migrants_1yr <- rateVar(movers_migrants_1yr, movers_1yr)
#tertiary
r_external_1yr <- rateVar(movers_migrants_external_1yr, movers_migrants_1yr)
r_internal_1yr <- rateVar(movers_migrants_internal_1yr, movers_migrants_1yr)
#quaternary
r_intra_1yr <- rateVar(movers_migrants_internal_intra_1yr, movers_migrants_internal_1yr)
r_inter_1yr <- rateVar(movers_migrants_internal_inter_1yr, movers_migrants_internal_1yr)
# 5 year mobility variables
#top level
r_nonMovers_5yr <- rateVar(nonMovers_5yr, mobility_total_5yr)
r_movers_5yr <- rateVar(movers_5yr, mobility_total_5yr)
#secondary
r_nonMigrants_5yr <- rateVar(movers_nonMigrants_5yr, movers_1yr)
r_migrants_5yr <- rateVar(movers_migrants_5yr, movers_5yr)
#tertiary
r_external_5yr <- rateVar(movers_migrants_external_5yr, movers_migrants_5yr)
r_internal_5yr <- rateVar(movers_migrants_internal_5yr, movers_migrants_5yr)
#quaternary
r_intra_5yr <- rateVar(movers_migrants_internal_intra_5yr, movers_migrants_internal_5yr)
r_inter_5yr <- rateVar(movers_migrants_internal_inter_5yr, movers_migrants_internal_5yr)
#putting cleaned variables into dataframe
cleaned_mobility_r <- cbind(r_external_1yr, r_inter_1yr, r_internal_1yr, r_intra_1yr, r_migrants_1yr, r_movers_1yr, r_nonMigrants_1yr, r_nonMovers_1yr)
library(tidyr)
#use loop val to view names to add to each df - couldn't get code to
stringNames <- c()
for (var in tidyselect::vars_select(ls(), ends_with('1yr') & starts_with('r'))){
stringNames <- append(stringNames, var)
# append(stringNames, var)
# c_mobility_1yr <- rbind(rawMobility[stringName])
}
#1 year cleaned df
c_mobility_1yr <- cbind(geoUID, r_external_1yr, r_inter_1yr, r_internal_1yr, r_intra_1yr, r_migrants_1yr, r_movers_1yr, r_nonMigrants_1yr,r_nonMovers_1yr)
#5 year cleaned df
c_mobility_5yr <- cbind(geoUID, r_external_5yr, r_inter_5yr, r_internal_5yr, r_intra_5yr, r_migrants_5yr, r_movers_5yr, r_nonMigrants_5yr,r_nonMovers_5yr)
#now need to deal with all other demographic variables - some are already rated, some aren't
attach(rawData) # for convenience
#first, i will subset out variables by domain
raw_immig <- rawData[25:40]
raw_popDwelling <- rawData[41:46]
raw_ageSex <- rawData[47:54]
raw_dwellChars <- rawData[55:61]
#first, i will subset out variables by domain
raw_immig <- rawData[25:28]
View(raw_immig)
#getting raw 2016 csv data into R
fileName <- "C:/Users/Ellie Maclennan/OneDrive - Toronto Metropolitan University/Certificate - CIND820/Data/Revised_2016_DA/Revised_2016_DA.csv"
#importing data set
rawData <- read.csv(fileName,sep=",",
stringsAsFactors=FALSE,na.strings = c("",NA))
#Q1) checking datatypes - says data type below
sapply(rawData, class)
head(rawData)
#using names function renaming the column heading names to be something more intuitive, for now keeping other column names as they are
#renaming geographic info and identifiers
names(rawData)[1:6]<- c("geoUID","provCode","provName","cdCode","cdName","daName")
#renaming mobility variables
names(rawData)[7:24]<- c("nonMovers_1yr"
,"movers_1yr"
,"movers_nonMigrants_1yr"
,"movers_migrants_1yr"
,"movers_migrants_external_1yr"
,"movers_migrants_internal_1yr"
,"movers_migrants_internal_intra_1yr"
,"movers_migrants_internal_inter_1yr"
,"mobility_total_1yr"
,"nonMovers_5yr"
,"movers_5yr"
,"movers_nonMigrants_5yr"
,"movers_migrants_5yr"
,"movers_migrants_external_5yr"
,"movers_migrants_internal_5yr"
,"movers_migrants_internal_intra_5yr"
,"movers_migrants_internal_inter_5yr"
,"mobility_total_5yr")
head(rawData) #check it worked
#creating subsets
#subsetting mobility variables (my DVs)
rawMobility <- rawData[,c(1,7:24)]
#creating subset for geographic info <- can use to join with col0 for visualization later
geoInfoSubset <-  rawData[, c(1:6)]
#descriptives
summary(rawMobility)
#now rate subMobility variables - use these for clustering
#function to rate variables and create difference variables
rateVar <- function(rawCount, rawTotal){
ratedVar <- (rawCount / rawTotal) } * 100
#now rating variables by level - hierarchy:
# 1 year moblility
# nonmovers, movers - top level
#         migrants, nonmigrants - secondary level
#     internal, external - tertiary level
# intraprov, interprov - quaternary level
# 5 year mobility
# nonmovers, movers - top level
#         migrants, nonmigrants - secondary level
#     internal, external - tertiary level
# intraprov, interprov - quaternary level
#attaching rawMoblity df for code simplicity
attach(rawMobility)
# 1 year mobility variables
#top level
r_nonMovers_1yr <- rateVar(nonMovers_1yr, mobility_total_1yr)
r_movers_1yr <- rateVar(movers_1yr, mobility_total_1yr)
#secondary
r_nonMigrants_1yr <- rateVar(movers_nonMigrants_1yr, movers_1yr)
r_migrants_1yr <- rateVar(movers_migrants_1yr, movers_1yr)
#tertiary
r_external_1yr <- rateVar(movers_migrants_external_1yr, movers_migrants_1yr)
r_internal_1yr <- rateVar(movers_migrants_internal_1yr, movers_migrants_1yr)
#quaternary
r_intra_1yr <- rateVar(movers_migrants_internal_intra_1yr, movers_migrants_internal_1yr)
r_inter_1yr <- rateVar(movers_migrants_internal_inter_1yr, movers_migrants_internal_1yr)
# 5 year mobility variables
#top level
r_nonMovers_5yr <- rateVar(nonMovers_5yr, mobility_total_5yr)
r_movers_5yr <- rateVar(movers_5yr, mobility_total_5yr)
#secondary
r_nonMigrants_5yr <- rateVar(movers_nonMigrants_5yr, movers_1yr)
r_migrants_5yr <- rateVar(movers_migrants_5yr, movers_5yr)
#tertiary
r_external_5yr <- rateVar(movers_migrants_external_5yr, movers_migrants_5yr)
r_internal_5yr <- rateVar(movers_migrants_internal_5yr, movers_migrants_5yr)
#quaternary
r_intra_5yr <- rateVar(movers_migrants_internal_intra_5yr, movers_migrants_internal_5yr)
r_inter_5yr <- rateVar(movers_migrants_internal_inter_5yr, movers_migrants_internal_5yr)
#putting cleaned variables into dataframe
cleaned_mobility_r <- cbind(r_external_1yr, r_inter_1yr, r_internal_1yr, r_intra_1yr, r_migrants_1yr, r_movers_1yr, r_nonMigrants_1yr, r_nonMovers_1yr)
#now rate subMobility variables - use these for clustering
#function to rate variables and create difference variables
rateVar <- function(rawCount, rawTotal){
ratedVar <- (rawCount / rawTotal) } * 100
#now rating variables by level - hierarchy:
# 1 year moblility
# nonmovers, movers - top level
#         migrants, nonmigrants - secondary level
#     internal, external - tertiary level
# intraprov, interprov - quaternary level
# 5 year mobility
# nonmovers, movers - top level
#         migrants, nonmigrants - secondary level
#     internal, external - tertiary level
# intraprov, interprov - quaternary level
#attaching rawMoblity df for code simplicity
attach(rawMobility)
# 1 year mobility variables
#top level
r_nonMovers_1yr <- rateVar(nonMovers_1yr, mobility_total_1yr)
r_movers_1yr <- rateVar(movers_1yr, mobility_total_1yr)
#secondary
r_nonMigrants_1yr <- rateVar(movers_nonMigrants_1yr, movers_1yr)
r_migrants_1yr <- rateVar(movers_migrants_1yr, movers_1yr)
#tertiary
r_external_1yr <- rateVar(movers_migrants_external_1yr, movers_migrants_1yr)
r_internal_1yr <- rateVar(movers_migrants_internal_1yr, movers_migrants_1yr)
#quaternary
r_intra_1yr <- rateVar(movers_migrants_internal_intra_1yr, movers_migrants_internal_1yr)
r_inter_1yr <- rateVar(movers_migrants_internal_inter_1yr, movers_migrants_internal_1yr)
# 5 year mobility variables
#top level
r_nonMovers_5yr <- rateVar(nonMovers_5yr, mobility_total_5yr)
r_movers_5yr <- rateVar(movers_5yr, mobility_total_5yr)
#secondary
r_nonMigrants_5yr <- rateVar(movers_nonMigrants_5yr, movers_1yr)
r_migrants_5yr <- rateVar(movers_migrants_5yr, movers_5yr)
#tertiary
r_external_5yr <- rateVar(movers_migrants_external_5yr, movers_migrants_5yr)
r_internal_5yr <- rateVar(movers_migrants_internal_5yr, movers_migrants_5yr)
#quaternary
r_intra_5yr <- rateVar(movers_migrants_internal_intra_5yr, movers_migrants_internal_5yr)
r_inter_5yr <- rateVar(movers_migrants_internal_inter_5yr, movers_migrants_internal_5yr)
#putting cleaned variables into dataframe
cleaned_mobility_r <- cbind(r_external_1yr, r_inter_1yr, r_internal_1yr, r_intra_1yr, r_migrants_1yr, r_movers_1yr, r_nonMigrants_1yr, r_nonMovers_1yr)
library(tidyr)
#use loop val to view names to add to each df - couldn't get code to
stringNames <- c()
for (var in tidyselect::vars_select(ls(), ends_with('1yr') & starts_with('r'))){
stringNames <- append(stringNames, var)
# append(stringNames, var)
# c_mobility_1yr <- rbind(rawMobility[stringName])
}
#1 year cleaned df
c_mobility_1yr <- cbind(geoUID, r_external_1yr, r_inter_1yr, r_internal_1yr, r_intra_1yr, r_migrants_1yr, r_movers_1yr, r_nonMigrants_1yr,r_nonMovers_1yr)
#5 year cleaned df
c_mobility_5yr <- cbind(geoUID, r_external_5yr, r_inter_5yr, r_internal_5yr, r_intra_5yr, r_migrants_5yr, r_movers_5yr, r_nonMigrants_5yr,r_nonMovers_5yr)
#first, i will subset out variables by domain
raw_immig <- rawData[25:28]
raw_housing <- rawData[29:50]
raw_dwelling <- rawData[51:56]
raw_dwellChars <- rawData[55:61]
#first, i will subset out variables by domain
raw_immig <- rawData[25:28]
raw_housing <- rawData[29:50]
raw_dwelling <- rawData[51:56]
raw_popDwelling <- rawData[57:58]
#now i will add headings from text file
names(raw_immig)<- c("nonImmig","immig","nonPR")
View(raw_immig)
#now i will add headings from text file
names(raw_immig)<- c("nonImmig","immig","nonPR", "totalImmig")
View(raw_immig)
#now i will add headings from text file
names(raw_immig)<- c("nonImmig","immig","nonPR", "total_Immig")
#now i will add headings from text file
names(raw_immig)<- c("nonImmig","immig","nonPR", "total_Immig")
names(raw_housing) <- c("owner","renter","bandHousing", "total_privHouse","notCond","less1PerRoom","total_pplPerRoom", "suitable", "total_suitStat", "onlyRegMaint", "total_dwellingCond", "ownTenLess30Inc","total_ownTenIncRatio","own_perMortg", "own_per30PlusInc", "own_medSheltCost","own_medValDwelling", "ten_perSubHous", "ten_per30PlusInc", "ten_medMonthSheltCost", "avgRoomPerDwell")
names(raw_dwelling <- c("typ_singleDetach", "typ_apart5MoreStor", "typ_otherAttach","typ_movableDwell", "total_DwellTyp", "avgHouseholdSize")
names(raw_popDwelling) <- c("popPerChange_11To16", "popPerSqKm" )
names(raw_dwelling) <- c("typ_singleDetach", "typ_apart5MoreStor", "typ_otherAttach","typ_movableDwell", "total_DwellTyp", "avgHouseholdSize")
names(raw_popDwelling) <- c("popPerChange_11To16", "popPerSqKm" )
View(raw_popDwelling)
raw_immig[1:3]
#now rating independent variables for use in models - need to be standardized as in raw counts
raw_immig[1:3]/raw_immig[4]
#rating immigration variables
for (var in raw_immig[1:3]){
ratedvar <- var / raw_immig[4] * 100 }
View(ratedvar)
#rating immigration variables
r_nonImmig <- c()
cl_immig <- data.frame()
for (var in raw_immig[1:3]){
ratedVar <- rateVar((var / raw_immig$total_Immig) * 100)
cbind(cl_immig, ratedVar)
}
cl_immig <- data.frame()
for (var in raw_immig[1:3]){
ratedVar <- rateVar(var, raw_immig$total_Immig)
cbind(cl_immig, ratedVar)
}
#now i will add headings from text file
names(raw_immig)<- c("nonImmig","immig","nonPR", "total_immig")
cl_immig <- data.frame()
cl_immig$nonImmig <- rateVar(nonImmig, total_immig)
attach(raw_immig)
cl_immig <- data.frame()
cl_immig$nonImmig <- rateVar(nonImmig, total_immig)
cl_immig$nonImmig <- rateVar(nonImmig, total_immig)
cl_immig <- cbind(rateVar(nonImmig, total_immig))
View(cl_immig)
#rating immigration variables
attach(raw_immig)
cl_immig <- data.frame()
cl_immig <- cbind(rateVar(nonImmig, total_immig))
cl_immig <- cbind(rateVar(immig, total_immig))
cl_immig <- cbind(rateVar(nonPR, total_immig))
names(cl_immig) <- c("nonImmig","immig","nonPR")
View(cl_immig)
"x" +1
"x" +"1"
paste("1","x")
as.character(0)
cl_immig <- data.frame()
rateAndAddNewCol <- function(var, myDF, myDF_totalVar, cl_dfName){ #note - need to have clean df ready as global var
attach(myDF)
count  = 0
for (var in myDF){
newCol <- rateVar(var, myDF_totalVar)
names(newCol) <- paste("Col", as.character(count))
cl_dfName$newCol
count = count + 1
}
}
cl_immig <- data.frame()
rateAndAddNewCol <- function(myDF, myDF_totalVar, cl_dfName){ #note - need to have clean df ready as global var
attach(myDF)
count  = 0
for (var in myDF){
newCol <- rateVar(var, myDF_totalVar)
names(newCol) <- paste("Col", as.character(count))
cl_dfName$newCol
count = count + 1
}
}
rateAndAddNewCol(cl_immig[1:3], raw_immig$total_immig, cl_immig)
rateAndAddNewCol(raw_immig[1:3], raw_immig$total_immig, cl_immig)
cl_immig <- data.frame()
rateAndAddNewCol <- function(myDF, myDF_totalVar, cl_dfName){ #note - need to have clean df ready as global var
# attach(myDF)
count  = 0
for (var in myDF){
newCol <- rateVar(var, myDF_totalVar)
names(newCol) <- paste("Col", as.character(count))
cl_dfName$newCol
count = count + 1
}
}
rateAndAddNewCol(raw_immig[1:3], raw_immig$total_immig, cl_immig)
View(cl_immig)
names(newCol)
rateAndAddNewCol(raw_immig[1:3], raw_immig$total_immig, cl_immig)
attach(raw_immig)
cl_immig <- data.frame()
cl_immig$nonImmig <- rateVar(nonImmig, total_immig)
cl_immig <- data.frame(matrix(ncol=0, nrow =0))
cl_immig$nonImmig <- rateVar(nonImmig, total_immig)
cl_immig <- data.frame(matrix(ncol=0, nrow=56883))
cl_immig$nonImmig <- rateVar(nonImmig, total_immig)
View(cl_immig)
cl_immig$immig <- rateVar(immig, total_immig)
cl_immig$nonPR <- rateVar(nonPR, total_immig)
View(cl_immig)
attach(raw_housing)
attach(raw_housing)
cl_housing <- data.frame(matrix(ncol=0, nrow=56883))
cl_housing$owner <- rateVar(owner, total_privHouse)
cl_housing$renter <- rateVar(renter, total_privHouse)
cl_housing$bandHousing <- rateVar(bandHousing, total_privHouse)
View(cl_housing)
View(raw_housing)
head(rawData[1:59])
head(rawData[1:58])
names(raw_housing) <- c("owner","renter","bandHousing", "total_privHouse","notCond","total_condStat","less1PerRoom","total_pplPerRoom", "suitable", "total_suitStat", "onlyRegMaint", "total_dwellingCond", "ownTenLess30Inc","total_ownTenIncRatio","own_perMortg", "own_per30PlusInc", "own_medSheltCost","own_medValDwelling", "ten_perSubHous", "ten_per30PlusInc", "ten_medMonthSheltCost", "avgRoomPerDwell")
cl_housing$notCond <- rateVar(notCond, total_condStat)
cl_housing$notCond <- rateVar(notCond, total_condStat)
cl_housing$notCond <- rateVar(notCond, total_condStat)
names(raw_housing) <- c("owner","renter","bandHousing", "total_privHouse","notCond","total_condStat","less1PerRoom","total_pplPerRoom", "suitable", "total_suitStat", "onlyRegMaint", "total_dwellingCond", "ownTenLess30Inc","total_ownTenIncRatio","own_perMortg", "own_per30PlusInc", "own_medSheltCost","own_medValDwelling", "ten_perSubHous", "ten_per30PlusInc", "ten_medMonthSheltCost", "avgRoomPerDwell")
cl_housing$notCond <- rateVar(notCond, total_condStat)
View(cl_housing)
View(raw_housing)
cl_housing$notCond <- rateVar(notCond, total_condStat)
raw_housing$total_condStat
cl_housing$notCond <- rateVar(notCond, raw_housing$total_condStat)
View(cl_housing)
cl_housing$less1PerRoom <- rateVar(less1PerRoom, total_pplPerRoom)
attach(raw_housing)
cl_housing <- data.frame(matrix(ncol=0, nrow=56883))
cl_housing$owner <- rateVar(owner, total_privHouse)
cl_housing$renter <- rateVar(renter, total_privHouse)
cl_housing$bandHousing <- rateVar(bandHousing, total_privHouse)
cl_housing$notCond <- rateVar(notCond, raw_housing$total_condStat)
cl_housing$less1PerRoom <- rateVar(less1PerRoom, total_pplPerRoom)
cl_housing$suitable <- rateVar(suitable, total_suitStat)
cl_housing$onlyRegMaint <- rateVar(onlyRegMaint, total_dwellingCond)
cl_housing$ownTenLess30Inc <- rateVar(ownTenLess30Inc, total_ownTenIncRatio)
cl_housing$typ_singleDetach <- rateVar(typ_singleDetach, total_DwellTyp)
names(raw_dwelling) <- c("typ_singleDetach", "typ_apart5MoreStor", "typ_otherAttach","typ_movableDwell", "total_DwellTyp", "avgHouseholdSize")
names(raw_popDwelling) <- c("popPerChange_11To16", "popPerSqKm" )
attach(raw_dwelling)
cl_dwelling <- data.frame(matrix(ncol=0, nrow=56883))
attach(raw_dwelling)
cl_dwelling <- data.frame(matrix(ncol=0, nrow=56883))
cl_dwelling$typ_singleDetach <- rateVar(typ_singleDetach, total_DwellTyp)
attach(raw_dwelling)
cl_dwelling <- data.frame(matrix(ncol=0, nrow=56883))
cl_dwelling$typ_singleDetach <- rateVar(typ_singleDetach, total_DwellTyp)
cl_dwelling$typ_apart5MoreStor <- rateVar(typ_apart5MoreStor, total_DwellTyp)
cl_dwelling$typ_otherAttach <- rateVar(typ_otherAttach, total_DwellTyp)
cl_dwelling$typ_movableDwell <- rateVar(typ_movableDwell, total_DwellTyp)
ttach(raw_popDwelling)
attach(raw_popDwelling)
cl_popDwelling <- data.frame(matrix(ncol=0, nrow=56883))
cl_popDwelling$popPerChange_11To16 <- popPerChange
cl_popDwelling$popPerChange_11To16 <- popPerChange_11To16
cl_popDwelling$popPerSqKm <- popPerSqKm
attach(raw_housing)
cl_housing$own_perMortg <- own_perMortg
cl_popDwelling <- raw_popDwelling
